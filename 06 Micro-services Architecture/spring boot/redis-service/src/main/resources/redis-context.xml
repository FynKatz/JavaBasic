<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- 1.扫描注册Javabeen -->
	<context:component-scan base-package="com.chr.service" />

    <!-- 2.扫描 redis.properties配置文件 -->
	<context:property-placeholder location="classpath:redis.properties" />

    <!-- 3.Jedis连接池 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxActive" value="${redis.maxActive}" />
		<property name="maxWait" value="${redis.maxWait}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>

    <!-- 4.Jedis的连接工厂 -->
	<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}"
		p:pool-config-ref="poolConfig" />

    <!-- 5.序列化：StringRedisTemplate默认采用的是String 的序列化策略 -->
	<bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
	</bean>
    
	<!-- 6.SDR Pub/Sub配置 -->
	<!-- 6.1SubServiceImpl是实现了MessageListener接口的类，MessageListener接口中定义了onMessage方法， 
		也就是接收消息的方法，每当Channel中有消息，onMessage方法会被自动调用 -->
	<bean id="topicMessageListener" class="com.chr.service.impl.SubServiceImpl">
	</bean>
	
	<!-- 6.2Channel设置 -->
    <bean id="channelTopic" class="org.springframework.data.redis.listener.ChannelTopic">
        <constructor-arg value="user:topic" />
    </bean>
    
    <!-- 6.3可以有多个messageListener，每个messageListener必须注册到RedisMessageListenerContainer中 -->
	<bean id="topicContainer" class="org.springframework.data.redis.listener.RedisMessageListenerContainer"
		destroy-method="destroy">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="messageListeners">
			<map>
				<entry key-ref="topicMessageListener">
					<ref bean="channelTopic" />
				</entry>
			</map>
		</property>
	</bean>
	
</beans>